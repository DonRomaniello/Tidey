{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  harmonics: [],\n  loading: false,\n  error: ''\n};\nexport const fetchHarmonics = createAsyncThunk('harmonics/fetchHarmonics', harmonicsUrl => {\n  return axios.get(harmonicsUrl.self).then(response => response.data).finally(response => console.log(response));\n});\nexport const harmonicsSlice = createSlice({\n  name: 'harmonics',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchHarmonics.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(fetchHarmonics.fulfilled, (state, action) => {\n      state.loading = false;\n      state.harmonics = action.payload.harmonicConstituents;\n      state.error = '';\n    });\n    builder.addCase(fetchHarmonics.rejected, (state, action) => {\n      state.loading = false;\n      state.harmonics = [];\n      state.error = action.error.message;\n    });\n  }\n});\nexport default harmonicsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","harmonics","loading","error","fetchHarmonics","harmonicsUrl","get","self","then","response","data","finally","console","log","harmonicsSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","harmonicConstituents","rejected","message","reducer"],"sources":["/Users/donromaniello/Code/JavaScript/tidey/src/store/features/harmonics.js"],"sourcesContent":["import {\n  createAsyncThunk,\n  createSlice,\n } from '@reduxjs/toolkit'\n\nimport axios from 'axios';\n\nconst initialState = {\n  harmonics: [],\n  loading: false,\n  error: '',\n}\n\n\nexport const fetchHarmonics = createAsyncThunk(\n  'harmonics/fetchHarmonics',\n  (harmonicsUrl) => {\n    return axios\n          .get(harmonicsUrl.self)\n          .then((response) => response.data )\n          .finally((response) => console.log(response))\n  }\n)\n\nexport const harmonicsSlice = createSlice({\n  name: 'harmonics',\n  initialState,\n  reducers: {\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchHarmonics.pending, state => {\n      state.loading = true;\n    })\n    builder.addCase(fetchHarmonics.fulfilled, (state, action) => {\n      state.loading = false\n      state.harmonics = action.payload.harmonicConstituents\n      state.error = ''\n    })\n    builder.addCase(fetchHarmonics.rejected, (state, action) => {\n      state.loading = false\n      state.harmonics = []\n      state.error = action.error.message\n    })\n  },\n})\n\nexport default harmonicsSlice.reducer\n\n"],"mappings":"AAAA,SACEA,gBADF,EAEEC,WAFF,QAGQ,kBAHR;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,EADQ;EAEnBC,OAAO,EAAE,KAFU;EAGnBC,KAAK,EAAE;AAHY,CAArB;AAOA,OAAO,MAAMC,cAAc,GAAGP,gBAAgB,CAC5C,0BAD4C,EAE3CQ,YAAD,IAAkB;EAChB,OAAON,KAAK,CACLO,GADA,CACID,YAAY,CAACE,IADjB,EAEAC,IAFA,CAEMC,QAAD,IAAcA,QAAQ,CAACC,IAF5B,EAGAC,OAHA,CAGSF,QAAD,IAAcG,OAAO,CAACC,GAAR,CAAYJ,QAAZ,CAHtB,CAAP;AAID,CAP2C,CAAvC;AAUP,OAAO,MAAMK,cAAc,GAAGhB,WAAW,CAAC;EACxCiB,IAAI,EAAE,WADkC;EAExCf,YAFwC;EAGxCgB,QAAQ,EAAE,EAH8B;EAKxCC,aAAa,EAAEC,OAAO,IAAI;IACxBA,OAAO,CAACC,OAAR,CAAgBf,cAAc,CAACgB,OAA/B,EAAwCC,KAAK,IAAI;MAC/CA,KAAK,CAACnB,OAAN,GAAgB,IAAhB;IACD,CAFD;IAGAgB,OAAO,CAACC,OAAR,CAAgBf,cAAc,CAACkB,SAA/B,EAA0C,CAACD,KAAD,EAAQE,MAAR,KAAmB;MAC3DF,KAAK,CAACnB,OAAN,GAAgB,KAAhB;MACAmB,KAAK,CAACpB,SAAN,GAAkBsB,MAAM,CAACC,OAAP,CAAeC,oBAAjC;MACAJ,KAAK,CAAClB,KAAN,GAAc,EAAd;IACD,CAJD;IAKAe,OAAO,CAACC,OAAR,CAAgBf,cAAc,CAACsB,QAA/B,EAAyC,CAACL,KAAD,EAAQE,MAAR,KAAmB;MAC1DF,KAAK,CAACnB,OAAN,GAAgB,KAAhB;MACAmB,KAAK,CAACpB,SAAN,GAAkB,EAAlB;MACAoB,KAAK,CAAClB,KAAN,GAAcoB,MAAM,CAACpB,KAAP,CAAawB,OAA3B;IACD,CAJD;EAKD;AAnBuC,CAAD,CAAlC;AAsBP,eAAeb,cAAc,CAACc,OAA9B"},"metadata":{},"sourceType":"module"}