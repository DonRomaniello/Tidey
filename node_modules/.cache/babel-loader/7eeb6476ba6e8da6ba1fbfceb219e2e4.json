{"ast":null,"code":"var _jsxFileName = \"/Users/donromaniello/Code/JavaScript/tidey/src/components/Station.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CircleMarker, Polyline } from 'react-leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\"); // require('dotenv').config();\n\n\nconst Station = props => {\n  _s();\n\n  const {\n    stationInfo\n  } = props;\n  const [predictions, setPredictions] = useState([]);\n  const [linePosition, setLinePosition] = useState([]);\n  const position = [stationInfo === null || stationInfo === void 0 ? void 0 : stationInfo.lat, stationInfo === null || stationInfo === void 0 ? void 0 : stationInfo.lng]; // const overlayStyle = {\n  //   opacity: '.25',\n  //   transform: 'rotate3d(1, 0, 0, 45deg)',\n  // }\n\n  const circleRadius = 10;\n\n  const urlWithArguments = () => {\n    let args = [{\n      datum: 'MSL'\n    }, {\n      format: 'json'\n    }, {\n      interval: 'h'\n    }, {\n      product: 'water_level'\n    }, {\n      range: '24'\n    }, {\n      station: '8454000'\n    }, {\n      time_zone: 'lst'\n    }, {\n      units: 'english'\n    }];\n    let returnURl = 'https://api.tidesandcurrents.noaa.gov/api/prod/datagetter' + args.map(argument => '&' + Object.keys(argument)[0] + '=' + argument[Object.keys(argument)[0]]).join('');\n    return returnURl;\n  }; // useEffect(() => {\n  //   const fetchTide = async () => {\n  //     const waterLevels = await axios.get(urlWithArguments(),\n  //      { headers: {\n  //       token: process.env.noaaToken,\n  //     }}\n  //     ).catch((error) => {\n  //       console.log(error)\n  //     })\n  //     setPredictions(waterLevels);\n  //   }\n  //   fetchTide();\n  // }, [])\n  // useEffect(() => {\n  //   setLinePosition([\n  //     position,\n  //     [ stationInfo.lon + Number(predictions[0]?.v),\n  //     position[1]]\n  //   ])\n  // }, [predictions, position])\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CircleMarker, {\n      center: position,\n      pathOptions: stationMarker,\n      radius: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n};\n\n_s(Station, \"XCxBIy/55OgI6H6ZZdeU5AAea+k=\");\n\n_c = Station;\nconst stationMarker = {\n  color: 'white',\n  opacity: '.8'\n};\nconst waterLevelMarker = {\n  color: 'green'\n};\nexport default Station;\n\nvar _c;\n\n$RefreshReg$(_c, \"Station\");","map":{"version":3,"names":["React","useState","useEffect","CircleMarker","Polyline","axios","require","Station","props","stationInfo","predictions","setPredictions","linePosition","setLinePosition","position","lat","lng","circleRadius","urlWithArguments","args","datum","format","interval","product","range","station","time_zone","units","returnURl","map","argument","Object","keys","join","stationMarker","color","opacity","waterLevelMarker"],"sources":["/Users/donromaniello/Code/JavaScript/tidey/src/components/Station.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\n\nimport {\n  CircleMarker,\n  Polyline,\n} from 'react-leaflet'\n\nconst axios =  require(\"axios\");\n\n// require('dotenv').config();\n\nconst Station = (props) => {\n\nconst { stationInfo } = props\n\nconst [predictions, setPredictions] = useState([])\n\nconst [linePosition, setLinePosition] = useState([]);\n\nconst position = [stationInfo?.lat, stationInfo?.lng]\n\n// const overlayStyle = {\n//   opacity: '.25',\n//   transform: 'rotate3d(1, 0, 0, 45deg)',\n// }\n\nconst circleRadius = 10\n\nconst urlWithArguments = () => {\n\n    let args = [\n      {datum: 'MSL'},\n      {format: 'json'},\n      {interval: 'h'},\n      {product: 'water_level'},\n      {range: '24'},\n      { station: '8454000'},\n      {time_zone: 'lst'},\n      {units: 'english'},\n    ]\n\n    let returnURl =  'https://api.tidesandcurrents.noaa.gov/api/prod/datagetter'\n                       + args.map((argument) => '&'\n                                  + Object.keys(argument)[0]\n                                  + '='\n                                  + argument[Object.keys(argument)[0]])\n                                  .join('')\n    return returnURl\n}\n\n// useEffect(() => {\n\n//   const fetchTide = async () => {\n//     const waterLevels = await axios.get(urlWithArguments(),\n//      { headers: {\n//       token: process.env.noaaToken,\n//     }}\n//     ).catch((error) => {\n//       console.log(error)\n//     })\n\n\n\n//     setPredictions(waterLevels);\n//   }\n\n//   fetchTide();\n\n// }, [])\n\n// useEffect(() => {\n//   setLinePosition([\n//     position,\n//     [ stationInfo.lon + Number(predictions[0]?.v),\n//     position[1]]\n//   ])\n\n// }, [predictions, position])\n\n\n\n\n  return (\n    <>\n       <CircleMarker center={position} pathOptions={stationMarker} radius={3} />\n       {/* <Polyline pathOptions={waterLevelMarker} positions={linePosition} /> */}\n    </>\n)\n}\n\nconst stationMarker = { color: 'white', opacity: '.8' }\n\nconst waterLevelMarker = { color: 'green' }\n\nexport default Station\n\n\n\n\n\n"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SACEC,YADF,EAEEC,QAFF,QAGO,eAHP;;;;AAKA,MAAMC,KAAK,GAAIC,OAAO,CAAC,OAAD,CAAtB,C,CAEA;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAAA;;EAE3B,MAAM;IAAEC;EAAF,IAAkBD,KAAxB;EAEA,MAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;EAEA,MAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;EAEA,MAAMa,QAAQ,GAAG,CAACL,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAEM,GAAd,EAAmBN,WAAnB,aAAmBA,WAAnB,uBAAmBA,WAAW,CAAEO,GAAhC,CAAjB,CAR2B,CAU3B;EACA;EACA;EACA;;EAEA,MAAMC,YAAY,GAAG,EAArB;;EAEA,MAAMC,gBAAgB,GAAG,MAAM;IAE3B,IAAIC,IAAI,GAAG,CACT;MAACC,KAAK,EAAE;IAAR,CADS,EAET;MAACC,MAAM,EAAE;IAAT,CAFS,EAGT;MAACC,QAAQ,EAAE;IAAX,CAHS,EAIT;MAACC,OAAO,EAAE;IAAV,CAJS,EAKT;MAACC,KAAK,EAAE;IAAR,CALS,EAMT;MAAEC,OAAO,EAAE;IAAX,CANS,EAOT;MAACC,SAAS,EAAE;IAAZ,CAPS,EAQT;MAACC,KAAK,EAAE;IAAR,CARS,CAAX;IAWA,IAAIC,SAAS,GAAI,8DACIT,IAAI,CAACU,GAAL,CAAUC,QAAD,IAAc,MACZC,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsB,CAAtB,CADY,GAEZ,GAFY,GAGZA,QAAQ,CAACC,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsB,CAAtB,CAAD,CAHnB,EAIUG,IAJV,CAIe,EAJf,CADrB;IAMA,OAAOL,SAAP;EACH,CApBD,CAjB2B,CAuC3B;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAIA;EACA;EAEA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;;;EAKE,oBACE;IAAA,uBACG,QAAC,YAAD;MAAc,MAAM,EAAEd,QAAtB;MAAgC,WAAW,EAAEoB,aAA7C;MAA4D,MAAM,EAAE;IAApE;MAAA;MAAA;MAAA;IAAA;EADH,iBADF;AAMD,CA7ED;;GAAM3B,O;;KAAAA,O;AA+EN,MAAM2B,aAAa,GAAG;EAAEC,KAAK,EAAE,OAAT;EAAkBC,OAAO,EAAE;AAA3B,CAAtB;AAEA,MAAMC,gBAAgB,GAAG;EAAEF,KAAK,EAAE;AAAT,CAAzB;AAEA,eAAe5B,OAAf"},"metadata":{},"sourceType":"module"}