{"ast":null,"code":"var _jsxFileName = \"/Users/donromaniello/Code/JavaScript/tidey/src/components/customReactLeaflet.js\",\n    _s = $RefreshSig$();\n\nimport { useLeafletContext } from '@react-leaflet/core';\nimport L from 'leaflet';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Square = props => {\n  _s();\n\n  const context = useLeafletContext();\n  const {\n    center\n  } = props;\n  useEffect(() => {\n    const bounds = L.latLng(props.center).toBounds(props.size);\n    const square = new L.Rectangle(bounds);\n    const container = context.layerContainer || context.map;\n    container.addLayer(square) // const canvasTest = L.Canvas().params\n    .params({\n      data: points\n    }); // optional add any custom data that will be passed to draw function\n\n    return () => {\n      container.removeLayer(square);\n    };\n  });\n  return () => {\n    /*#__PURE__*/\n    _jsxDEV(Square, {\n      center: center,\n      size: 1000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this);\n  };\n};\n\n_s(Square, \"Zobnb+pSj25RsqMu73zm7MWhf8U=\", false, function () {\n  return [useLeafletContext];\n});\n\n_c = Square;\nexport default Square;\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"names":["useLeafletContext","L","useEffect","Square","props","context","center","bounds","latLng","toBounds","size","square","Rectangle","container","layerContainer","map","addLayer","params","data","points","removeLayer"],"sources":["/Users/donromaniello/Code/JavaScript/tidey/src/components/customReactLeaflet.js"],"sourcesContent":["import { useLeafletContext } from '@react-leaflet/core'\nimport L from 'leaflet'\nimport { useEffect } from 'react'\n\nconst Square = (props) => {\n  const context = useLeafletContext()\n\n  const { center } = props\n\n  useEffect(() => {\n    const bounds = L.latLng(props.center).toBounds(props.size)\n    const square = new L.Rectangle(bounds)\n    const container = context.layerContainer || context.map\n    container.addLayer(square)\n\n    // const canvasTest = L.Canvas().params\n\n    .params({data: points})     // optional add any custom data that will be passed to draw function\n\n    return () => {\n      container.removeLayer(square)\n    }\n  })\n\n  return () => {\n    <Square center={center} size={1000} />\n  }\n}\n\nexport default Square\n"],"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;EAAA;;EACxB,MAAMC,OAAO,GAAGL,iBAAiB,EAAjC;EAEA,MAAM;IAAEM;EAAF,IAAaF,KAAnB;EAEAF,SAAS,CAAC,MAAM;IACd,MAAMK,MAAM,GAAGN,CAAC,CAACO,MAAF,CAASJ,KAAK,CAACE,MAAf,EAAuBG,QAAvB,CAAgCL,KAAK,CAACM,IAAtC,CAAf;IACA,MAAMC,MAAM,GAAG,IAAIV,CAAC,CAACW,SAAN,CAAgBL,MAAhB,CAAf;IACA,MAAMM,SAAS,GAAGR,OAAO,CAACS,cAAR,IAA0BT,OAAO,CAACU,GAApD;IACAF,SAAS,CAACG,QAAV,CAAmBL,MAAnB,EAEA;IAFA,CAICM,MAJD,CAIQ;MAACC,IAAI,EAAEC;IAAP,CAJR,EAJc,CAQc;;IAE5B,OAAO,MAAM;MACXN,SAAS,CAACO,WAAV,CAAsBT,MAAtB;IACD,CAFD;EAGD,CAbQ,CAAT;EAeA,OAAO,MAAM;IACX;IAAA,QAAC,MAAD;MAAQ,MAAM,EAAEL,MAAhB;MAAwB,IAAI,EAAE;IAA9B;MAAA;MAAA;MAAA;IAAA;EACD,CAFD;AAGD,CAvBD;;GAAMH,M;UACYH,iB;;;KADZG,M;AAyBN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}