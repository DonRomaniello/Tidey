{"ast":null,"code":"var _jsxFileName = \"/Users/donromaniello/Code/JavaScript/tidey/src/components/Station.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CircleMarker } from 'react-leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Station = props => {\n  _s();\n\n  const {\n    stationInfo\n  } = props;\n  const [predictions, setPredictions] = useState([]);\n  const position = [stationInfo === null || stationInfo === void 0 ? void 0 : stationInfo.lat, stationInfo === null || stationInfo === void 0 ? void 0 : stationInfo.lng];\n  const overlayStyle = {\n    opacity: '.25',\n    transform: 'rotate3d(1, 0, 0, 45deg)'\n  };\n  const circleRadius = 10;\n  let args = [{\n    station: '8454000'\n  }, {\n    range: '24'\n  }, {\n    product: 'water_level'\n  }, {\n    datum: 'NAVD'\n  }, {\n    units: 'english'\n  }, {\n    time_zone: 'gmt'\n  }, {\n    format: 'json'\n  }];\n\n  const urlWithArguments = args => {\n    let returnURl = 'https://api.tidesandcurrents.noaa.gov/api/prod/datagetter' + args.map(argument => '&' + Object.keys(argument)[0] + '=' + argument[Object.keys(argument)[0]]).join('');\n    console.log(returnURl);\n    return returnURl;\n  };\n\n  console.log(stationInfo === null || stationInfo === void 0 ? void 0 : stationInfo.reference_id);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CircleMarker, {\n      center: position,\n      pathOptions: stationMarker,\n      radius: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n};\n\n_s(Station, \"ObZC7TL8OtqvBaJFpA0KoKQtRy8=\");\n\n_c = Station;\nconst stationMarker = {\n  color: 'blue',\n  opacity: '.2'\n};\nexport default Station;\n\nvar _c;\n\n$RefreshReg$(_c, \"Station\");","map":{"version":3,"names":["React","useState","useEffect","CircleMarker","Station","props","stationInfo","predictions","setPredictions","position","lat","lng","overlayStyle","opacity","transform","circleRadius","args","station","range","product","datum","units","time_zone","format","urlWithArguments","returnURl","map","argument","Object","keys","join","console","log","reference_id","stationMarker","color"],"sources":["/Users/donromaniello/Code/JavaScript/tidey/src/components/Station.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport {\n  CircleMarker\n} from 'react-leaflet'\n\n\nconst Station = (props) => {\n\nconst { stationInfo } = props\n\nconst [predictions, setPredictions] = useState([])\n\nconst position = [stationInfo?.lat, stationInfo?.lng]\n\nconst overlayStyle = {\n  opacity: '.25',\n  transform: 'rotate3d(1, 0, 0, 45deg)',\n}\n\nconst circleRadius = 10\n\nlet args = [\n  { station: '8454000'},\n  {range: '24'},\n  {product: 'water_level'},\n  {datum: 'NAVD'},\n  {units: 'english'},\n  {time_zone: 'gmt'},\n  {format: 'json'},\n]\n\nconst urlWithArguments = (args) => {\n    let returnURl =  'https://api.tidesandcurrents.noaa.gov/api/prod/datagetter'\n                       + args.map((argument) => '&'\n                                  + Object.keys(argument)[0]\n                                  + '='\n                                  + argument[Object.keys(argument)[0]])\n                                  .join('')\n\n    console.log(returnURl)\n\n    return returnURl\n}\n\n\n\n\nconsole.log(stationInfo?.reference_id)\n\n  return (\n    <>\n       <CircleMarker center={position} pathOptions={stationMarker} radius={3} />\n    </>\n)\n}\n\nconst stationMarker = { color: 'blue', opacity: '.2' }\n\n\nexport default Station\n\n\n\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SACEC,YADF,QAEO,eAFP;;;;AAKA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAAA;;EAE3B,MAAM;IAAEC;EAAF,IAAkBD,KAAxB;EAEA,MAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;EAEA,MAAMQ,QAAQ,GAAG,CAACH,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAEI,GAAd,EAAmBJ,WAAnB,aAAmBA,WAAnB,uBAAmBA,WAAW,CAAEK,GAAhC,CAAjB;EAEA,MAAMC,YAAY,GAAG;IACnBC,OAAO,EAAE,KADU;IAEnBC,SAAS,EAAE;EAFQ,CAArB;EAKA,MAAMC,YAAY,GAAG,EAArB;EAEA,IAAIC,IAAI,GAAG,CACT;IAAEC,OAAO,EAAE;EAAX,CADS,EAET;IAACC,KAAK,EAAE;EAAR,CAFS,EAGT;IAACC,OAAO,EAAE;EAAV,CAHS,EAIT;IAACC,KAAK,EAAE;EAAR,CAJS,EAKT;IAACC,KAAK,EAAE;EAAR,CALS,EAMT;IAACC,SAAS,EAAE;EAAZ,CANS,EAOT;IAACC,MAAM,EAAE;EAAT,CAPS,CAAX;;EAUA,MAAMC,gBAAgB,GAAIR,IAAD,IAAU;IAC/B,IAAIS,SAAS,GAAI,8DACIT,IAAI,CAACU,GAAL,CAAUC,QAAD,IAAc,MACZC,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsB,CAAtB,CADY,GAEZ,GAFY,GAGZA,QAAQ,CAACC,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsB,CAAtB,CAAD,CAHnB,EAIUG,IAJV,CAIe,EAJf,CADrB;IAOAC,OAAO,CAACC,GAAR,CAAYP,SAAZ;IAEA,OAAOA,SAAP;EACH,CAXD;;EAgBAM,OAAO,CAACC,GAAR,CAAY1B,WAAZ,aAAYA,WAAZ,uBAAYA,WAAW,CAAE2B,YAAzB;EAEE,oBACE;IAAA,uBACG,QAAC,YAAD;MAAc,MAAM,EAAExB,QAAtB;MAAgC,WAAW,EAAEyB,aAA7C;MAA4D,MAAM,EAAE;IAApE;MAAA;MAAA;MAAA;IAAA;EADH,iBADF;AAKD,CAhDD;;GAAM9B,O;;KAAAA,O;AAkDN,MAAM8B,aAAa,GAAG;EAAEC,KAAK,EAAE,MAAT;EAAiBtB,OAAO,EAAE;AAA1B,CAAtB;AAGA,eAAeT,OAAf"},"metadata":{},"sourceType":"module"}